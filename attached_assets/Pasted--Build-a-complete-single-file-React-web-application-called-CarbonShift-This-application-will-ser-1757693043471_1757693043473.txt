
Build a complete, single-file React web application called "CarbonShift". This application will serve as the user-facing interface for the "Blockchain-Based Incentive System for Sustainable Commuting" project. The goal is to allow users to log their green commuting trips, earn "Green Tokens" (GTN), and view a marketplace where they can spend them.

Use the provided GreenToken.sol contract as the basis for all blockchain interactions. The application must be visually appealing, with a modern, clean, and eco-friendly (green and white) theme, and should be fully responsive for mobile and desktop use. Use Tailwind CSS for styling.

Key Features to Implement:

UI & Components (All in one file):

Header: Displays the app title "CarbonShift," the user's connected wallet address, and their current Green Token (GTN) balance.

Connect Wallet Button: The primary call-to-action on page load if the user is not connected. Use ethers.js to connect to a user's browser wallet (like MetaMask) on the Sepolia testnet.

Dashboard View: The main view after connecting. It should contain:

A prominent display of the user's GTN balance.

A "Log New Trip" button that opens a modal.

A list or table of the user's recent trips.

Trip Logging Modal:

A simple form with:

A dropdown to select the mode of transport ("Walking", "Cycling", "Public Transport").

An input field for distance in kilometers.

A "Submit Trip" button.

Marketplace View:

A section displaying mock rewards from local Bengaluru partners. Create at least 3-4 sample reward cards (e.g., "15% off at Corner House Ice Cream", "Free Coffee at Third Wave Coffee", "â‚¹100 off movie tickets"). Each card should show the GTN cost.

Each reward should have a "Redeem" button.

Functionality & Logic:

Trip Logging & Token Simulation: Since automatic AI-based trip verification is not feasible in this web app, we will simulate it. When a user submits a trip:

Calculate the tokens earned based on this logic:

Walking: 1 GTN per km

Cycling: 0.5 GTN per km

Public Transport: 0.2 GTN per km

Display a confirmation message like "Trip logged! You've earned X GTN!".

For this prototype, instead of triggering a live mint transaction (which would require the app to be the contract owner and manage a private key securely), simulate the reward by showing the updated balance in the UI. The trip data (mode, distance, tokens earned, timestamp) should be saved.

Balance Display: The app should fetch and display the user's GTN balance from the GreenToken smart contract on the Sepolia network.

Marketplace Redemption: When a user clicks "Redeem" on a reward:

Check if they have enough GTN.

If they do, show a success message (e.g., "Success! Your coupon code is BENGALURU-GREEN-123") and deduct the cost from their displayed balance.

If they don't, show an "Insufficient balance" message.

Styling and UX:

Use an eco-friendly color palette (greens, whites, light greys).

Use the "Inter" font.

The layout must be clean, modern, and easy to navigate on mobile devices.

Include loading indicators for asynchronous actions like connecting the wallet and fetching the balance.

Make the UI feel encouraging, with positive reinforcement for logging trips.

Technical Specifications:

Framework: React with Hooks.

Styling: Tailwind CSS.

Blockchain Interaction: Use the ethers.js library (v6).

Contract Details: Use the ABI from the GreenToken.sol contract. Assume the contract is already deployed to a known address on the Sepolia testnet (you can use a placeholder address like 0xc68769c2f8e4e7eBf6810691632cE6A1b676c16D).